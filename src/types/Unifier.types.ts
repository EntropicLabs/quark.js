/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.34.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Decimal = string;
export type Addr = string;
export type Denom = string;
export interface InstantiateMsg {
  crank_window: number;
  cw1_whitelist_code_id: number;
  fees: [Decimal, Addr][];
  fin_multi_contract: Addr;
  hub_contract: Addr;
  hub_denom: Denom;
  owner: Addr;
  swap_oracles: string[];
  target_denom: Denom;
}
export type ExecuteMsg = {
  crank: CrankMsg;
} | {
  update_config: ConfigUpdate;
} | {
  trigger_distribution: {};
} | {
  rewards: RewardsMsg;
};
export type Uint128 = string;
export type RewardsMsg = {
  stake: StakeMsg;
} | {
  unstake: UnstakeMsg;
} | {
  claim_rewards: ClaimRewardsMsg;
} | {
  distribute_rewards: DistributeRewardsMsg;
};
export type CallbackData = string;
export type CallbackData1 = string;
export type CallbackData2 = string;
export type CallbackData3 = string;
export interface CrankMsg {
  funds: Coin[];
  signature: Signature;
  stages: [Addr, Denom][][];
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Signature {
  pubkey: string;
  signature: string;
  timestamp: number;
}
export interface ConfigUpdate {
  crank_window?: number | null;
  fees?: [Decimal, Addr][] | null;
  fin_multi_contract?: Addr | null;
  new_swap_oracles?: string[] | null;
  owner?: Addr | null;
  remove_swap_oracles?: string[] | null;
  rewards_contract?: Addr | null;
  target_denom?: Denom | null;
}
export interface StakeMsg {
  callback?: CallbackData | null;
  withdraw_rewards: boolean;
}
export interface UnstakeMsg {
  amount: Uint128;
  callback?: CallbackData1 | null;
  withdraw_rewards: boolean;
}
export interface ClaimRewardsMsg {
  callback?: CallbackData2 | null;
}
export interface DistributeRewardsMsg {
  callback?: CallbackData3 | null;
}
export type QueryMsg = {
  pending_swaps: {};
} | {
  config: {};
} | {
  pending_rewards: {
    staker: Addr;
  };
} | {
  stake_info: {
    staker: Addr;
  };
};
export interface ConfigResponse {
  crank_window: number;
  cw1_whitelist_contract: Addr;
  fees: [Decimal, Addr][];
  fin_multi_contract: Addr;
  hub_contract: Addr;
  hub_denom: Denom;
  hub_rewards_contract: Addr;
  owner: Addr;
  target_denom: Denom;
  underlying_denom: Denom;
}
export interface PendingRewardsResponse {
  rewards: Coin[];
}
export interface PendingSwapResponse {
  balances: Coin[];
}
export interface StakeInfoResponse {
  amount: Uint128;
  staker: Addr;
}