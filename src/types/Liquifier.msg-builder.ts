/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.34.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Addr, InstantiateMsg, ExecuteMsg, CallbackData, CallbackData1, UnwrapTarget, WrapMsg, UnwrapMsg, ConfigUpdate, QueryMsg, Denom, ConfigResponse, Decimal, Uint128, StateResponse } from "./Liquifier.types";
import { CamelCasedProperties } from "type-fest";
export abstract class LiquifierExecuteMsgBuilder {
  static wrap = ({
    callback
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    wrap: unknown;
  }>["wrap"]>): ExecuteMsg => {
    return {
      wrap: ({
        callback
      } as const)
    };
  };
  static unwrap = ({
    callback,
    target
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    unwrap: unknown;
  }>["unwrap"]>): ExecuteMsg => {
    return {
      unwrap: ({
        callback,
        target
      } as const)
    };
  };
  static updateConfig = ({
    owner
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_config: unknown;
  }>["update_config"]>): ExecuteMsg => {
    return {
      update_config: ({
        owner
      } as const)
    };
  };
}
export abstract class LiquifierQueryMsgBuilder {
  static config = (): QueryMsg => {
    return {
      config: ({} as const)
    };
  };
  static state = (): QueryMsg => {
    return {
      state: ({} as const)
    };
  };
}